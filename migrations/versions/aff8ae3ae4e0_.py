"""empty message

Revision ID: aff8ae3ae4e0
Revises: 9b342063df81
Create Date: 2024-07-10 09:36:35.097557

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'aff8ae3ae4e0'
down_revision = '9b342063df81'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('token', sa.String(), nullable=True),
    sa.Column('token_expiration', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    with op.batch_alter_table('user_', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user__token'), ['token'], unique=True)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index('ix_user_token')

    op.drop_table('user')
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.drop_constraint('comment_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user_', ['user_id'], ['id'])

    with op.batch_alter_table('ingredient', schema=None) as batch_op:
        batch_op.drop_constraint('ingredient_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user_', ['user_id'], ['id'])

    with op.batch_alter_table('instruction', schema=None) as batch_op:
        batch_op.drop_constraint('instruction_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user_', ['user_id'], ['id'])

    with op.batch_alter_table('recipe', schema=None) as batch_op:
        batch_op.drop_constraint('recipe_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user_', ['user_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('recipe', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('recipe_user_id_fkey', 'user', ['user_id'], ['id'])

    with op.batch_alter_table('instruction', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('instruction_user_id_fkey', 'user', ['user_id'], ['id'])

    with op.batch_alter_table('ingredient', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('ingredient_user_id_fkey', 'user', ['user_id'], ['id'])

    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('comment_user_id_fkey', 'user', ['user_id'], ['id'])

    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('token_expiration', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key'),
    sa.UniqueConstraint('username', name='user_username_key')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index('ix_user_token', ['token'], unique=True)

    with op.batch_alter_table('user_', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user__token'))

    op.drop_table('user_')
    # ### end Alembic commands ###
